general {
    base_exp_dir = <your output save path>
}

val_dataset {
    dataset_name = BMVSDataset
    data_dir = <BlendedMVS path>
    scene = [59e864b2a9e91f2c5529325f]
    ref_view = [1]
    src_views = [0, 2]
    num_src_view = 2
    val_res_level = 4
    factor = 1.0 # smaller, more zoom in
    interval_scale = 1
    num_interval = 100
    img_hw = [576, 768]
}

train {
    lr_conf{
        feat_lr = 1e-3
        mlp_lr = 5e-4
    }

    epochs = 16
    anneal_end = 3

    warmup = 1
    alpha = 0.02

    save_freq = 1
    log_freq = 0.2
    val_freq = 1

    loss {
        color_weight = 1.0
        sparse_weight = 0.02
        igr_weight = 0.1
        sparse_scale_factor = 100
        mfc_weight = 1.0
        smooth_weight = 0.0001
        tv_weight = 0.0
        depth_weight = 0.0
        ptloss_weight = 1.0
        pseudo_auxi_depth_weight = 1.0
        pseudo_sdf_weight = 1.0
        stage_weights = [0.25, 0.5, 0.75, 1.0]
        pseudo_depth_weight = 1.0
    }
}

model {
    range_ratios = [1.0, 0.4, 0.1, 0.01]
    feature_network {
        d_in = 3
        d_base = 8
        d_out = [4, 4, 4, 4]
    }
    volume {
        base_volume_dim = [88, 88, 88]
    }
    reg_network {
        d_in = [8, 16, 16, 16]
        d_base = [8, 8, 8, 8]
        d_out = [8, 8, 8, 8]
    }
    matching_field{
        n_samples_depths = [128, 64, 32, 16]
        n_importance_depths = [128, 64, 32, 16]
        up_sample_steps = [4, 4, 4, 4]
        depth_res_levels = [4, 2, 2, 1]
    }
    implicit_surface {
        sdf_network {
            d_out = 129
            d_in = 3
            d_hidden = 128
            n_layers = 6
            skip_in = [3]
            multires = 4
            bias = 0.5
            scale = 1.0
            geometric_init = True
            weight_norm = True
            feat_channels = 28
            feat_multires = 0
        }
        color_network {
            d_feature = 16
            # d_feature = 128
            # mode = idr
            # d_in = 9
            # d_out = 3
            # d_hidden = 256
            # n_layers = 4
            # weight_norm = True
            # multires_view = 4
            # squeeze_out = True
        }
        variance_network {
            init_val = 0.3
        }
        render {
            n_samples = [64, 32, 24, 16]
            sample_ranges = [1.0, 0.4, 0.1, 0.01]
            n_depth = 256
            perturb = 1.0
        }
    }
}